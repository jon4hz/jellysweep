// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.960
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"github.com/jon4hz/jellysweep/api/models"
	"github.com/jon4hz/jellysweep/web/templates"
)

func HistoryPanel(user *models.User) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<style>\n\t\t\t.sort-icon {\n\t\t\t\topacity: 0.3;\n\t\t\t\ttransition: opacity 0.2s, transform 0.2s;\n\t\t\t}\n\t\t\tth[data-sort]:hover .sort-icon {\n\t\t\t\topacity: 0.6;\n\t\t\t}\n\t\t\t.sort-icon.sort-active {\n\t\t\t\topacity: 1;\n\t\t\t\tcolor: #60a5fa;\n\t\t\t}\n\t\t\t.sort-icon.sort-desc {\n\t\t\t\ttransform: rotate(0deg);\n\t\t\t}\n\t\t\t.sort-icon.sort-asc {\n\t\t\t\ttransform: rotate(180deg);\n\t\t\t}\n\t\t</style> <div class=\"space-y-6\"><!-- Header --><div class=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\"><div><h1 class=\"text-3xl font-bold text-gray-100\">Deletion History</h1><p class=\"mt-1 text-sm text-gray-400\">View the complete history of jellysweep actions.</p></div><div class=\"mt-4 sm:mt-0\"><button id=\"refresh-history-btn\" class=\"inline-flex items-center px-4 py-2 border border-gray-600 rounded-md shadow-sm text-sm font-medium text-gray-300 bg-gray-700 hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200\"><svg class=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"></path></svg> Refresh</button></div></div><!-- History Table -->")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = HistoryTable().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</div><!-- Include shared utility scripts --> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templates.ToastScript().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templates.ButtonLoadingUtils().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templates.ApiUtils().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templates.SmoothNavigationUtils().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, " <!-- Include history-specific scripts --> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = HistoryScript().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = templates.Layout("Deletion History", user).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func HistoryTable() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<div class=\"bg-gray-800 rounded-lg border border-gray-700\"><div class=\"overflow-x-auto\"><table class=\"min-w-full divide-y divide-gray-700\"><thead class=\"bg-gray-900\"><tr><th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider cursor-pointer hover:bg-gray-800 transition-colors\" data-sort=\"title\"><div class=\"flex items-center space-x-1\"><span>Title</span> <svg class=\"w-4 h-4 sort-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4\"></path></svg></div></th><th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider cursor-pointer hover:bg-gray-800 transition-colors\" data-sort=\"year\"><div class=\"flex items-center space-x-1\"><span>Year</span> <svg class=\"w-4 h-4 sort-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4\"></path></svg></div></th><th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider cursor-pointer hover:bg-gray-800 transition-colors\" data-sort=\"media_type\"><div class=\"flex items-center space-x-1\"><span>Type</span> <svg class=\"w-4 h-4 sort-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4\"></path></svg></div></th><th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider cursor-pointer hover:bg-gray-800 transition-colors\" data-sort=\"library\"><div class=\"flex items-center space-x-1\"><span>Library</span> <svg class=\"w-4 h-4 sort-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4\"></path></svg></div></th><th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider cursor-pointer hover:bg-gray-800 transition-colors\" data-sort=\"requested_by\"><div class=\"flex items-center space-x-1\"><span>Requested By</span> <svg class=\"w-4 h-4 sort-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4\"></path></svg></div></th><th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">Action</th><th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider cursor-pointer hover:bg-gray-800 transition-colors\" data-sort=\"deleted_at\"><div class=\"flex items-center space-x-1\"><span>Date</span> <svg class=\"w-4 h-4 sort-icon sort-active\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4\"></path></svg></div></th><th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider cursor-pointer hover:bg-gray-800 transition-colors\" data-sort=\"file_size\"><div class=\"flex items-center space-x-1\"><span>File Size</span> <svg class=\"w-4 h-4 sort-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4\"></path></svg></div></th></tr></thead> <tbody id=\"history-table-body\" class=\"bg-gray-800 divide-y divide-gray-700\"><!-- Table rows will be populated by JavaScript --><tr id=\"history-loading\"><td colspan=\"8\" class=\"px-6 py-12 text-center\"><div class=\"flex items-center justify-center\"><svg class=\"animate-spin h-8 w-8 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\"><circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle> <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path></svg> <span class=\"ml-3 text-gray-400\">Loading history...</span></div></td></tr></tbody></table></div><!-- Pagination --><div id=\"pagination-container\" class=\"px-6 py-4 border-t border-gray-700 flex items-center justify-between\"><div class=\"flex items-center\"><span class=\"text-sm text-gray-400\">Showing <span id=\"showing-from\">0</span> to <span id=\"showing-to\">0</span> of <span id=\"total-items\">0</span> items</span></div><div class=\"flex items-center space-x-2\"><button id=\"prev-page-btn\" disabled class=\"px-3 py-2 border border-gray-600 rounded-md text-sm font-medium text-gray-400 bg-gray-700 hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-200\">Previous</button> <span class=\"text-sm text-gray-400\">Page <span id=\"current-page\">1</span> of <span id=\"total-pages\">1</span></span> <button id=\"next-page-btn\" disabled class=\"px-3 py-2 border border-gray-600 rounded-md text-sm font-medium text-gray-400 bg-gray-700 hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-200\">Next</button></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func HistoryScript() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var4 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var4 == nil {
			templ_7745c5c3_Var4 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "<script>\n\t\tlet currentPage = 1;\n\t\tlet pageSize = 50;\n\t\tlet totalPages = 1;\n\t\tlet currentSort = 'deleted_at';\n\t\tlet currentSortOrder = 'desc';\n\n\t\tdocument.addEventListener('DOMContentLoaded', function() {\n\t\t\tupdateSortIcons();\n\t\t\tloadHistory();\n\n\t\t\t// Refresh button\n\t\t\tdocument.getElementById('refresh-history-btn').addEventListener('click', function() {\n\t\t\t\trefreshHistory();\n\t\t\t});\n\n\t\t\t// Pagination buttons\n\t\t\tdocument.getElementById('prev-page-btn').addEventListener('click', function() {\n\t\t\t\tif (currentPage > 1) {\n\t\t\t\t\tcurrentPage--;\n\t\t\t\t\tloadHistory();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tdocument.getElementById('next-page-btn').addEventListener('click', function() {\n\t\t\t\tif (currentPage < totalPages) {\n\t\t\t\t\tcurrentPage++;\n\t\t\t\t\tloadHistory();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Sorting\n\t\t\tdocument.querySelectorAll('th[data-sort]').forEach(header => {\n\t\t\t\theader.addEventListener('click', function() {\n\t\t\t\t\tconst sortBy = this.getAttribute('data-sort');\n\n\t\t\t\t\t// Toggle sort order if clicking the same column\n\t\t\t\t\tif (currentSort === sortBy) {\n\t\t\t\t\t\tcurrentSortOrder = currentSortOrder === 'asc' ? 'desc' : 'asc';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcurrentSort = sortBy;\n\t\t\t\t\t\tcurrentSortOrder = 'desc'; // Default to descending for new column\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentPage = 1; // Reset to first page when sorting\n\t\t\t\t\tupdateSortIcons();\n\t\t\t\t\tloadHistory();\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tfunction updateSortIcons() {\n\t\t\t// Remove active class from all icons\n\t\t\tdocument.querySelectorAll('.sort-icon').forEach(icon => {\n\t\t\t\ticon.classList.remove('sort-active', 'sort-asc', 'sort-desc');\n\t\t\t});\n\n\t\t\t// Add active class to current sort column\n\t\t\tconst activeHeader = document.querySelector(`th[data-sort=\"${currentSort}\"]`);\n\t\t\tif (activeHeader) {\n\t\t\t\tconst icon = activeHeader.querySelector('.sort-icon');\n\t\t\t\tif (icon) {\n\t\t\t\t\ticon.classList.add('sort-active', `sort-${currentSortOrder}`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction loadHistory() {\n\t\t\tconst tbody = document.getElementById('history-table-body');\n\t\t\tconst loading = document.getElementById('history-loading');\n\n\t\t\tif (loading) {\n\t\t\t\tloading.style.display = '';\n\t\t\t}\n\n\t\t\twindow.makeApiRequestEnhanced(`/admin/api/history?page=${currentPage}&pageSize=${pageSize}&sortBy=${currentSort}&sortOrder=${currentSortOrder}`, {\n\t\t\t\tmethod: 'GET',\n\t\t\t\tshowProgress: false\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tif (data.success) {\n\t\t\t\t\tupdateTable(data.data);\n\t\t\t\t\tupdatePagination(data.data);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(data.error || 'Failed to load history');\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error('Error loading history:', error);\n\t\t\t\twindow.showToast('Failed to load history: ' + error.message, 'error');\n\t\t\t\ttbody.innerHTML = `\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan=\"8\" class=\"px-6 py-12 text-center text-gray-400\">\n\t\t\t\t\t\t\tFailed to load history. Please try again.\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t`;\n\t\t\t});\n\t\t}\n\n\t\tfunction updateTable(historyData) {\n\t\t\tconst tbody = document.getElementById('history-table-body');\n\n\t\t\tif (!historyData.items || historyData.items.length === 0) {\n\t\t\t\ttbody.innerHTML = `\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan=\"8\" class=\"px-6 py-12 text-center text-gray-400\">\n\t\t\t\t\t\t\tNo deletion history found.\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t`;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttbody.innerHTML = historyData.items.map(item => {\n\t\t\t\tconst deletedAt = new Date(item.DeletedAt);\n\t\t\t\tconst formattedDate = deletedAt.toLocaleString();\n\t\t\t\tconst mediaTypeIcon = item.MediaType === 'tv' ? '📺' : '🎬';\n\t\t\t\tconst fileSize = formatFileSize(item.FileSize);\n\t\t\t\tconst deleteReasonBadge = getDeleteReasonBadge(item.DBDeleteReason);\n\n\t\t\t\treturn `\n\t\t\t\t\t<tr class=\"hover:bg-gray-750 transition-colors duration-150\">\n\t\t\t\t\t\t<td class=\"px-6 py-4 whitespace-nowrap\">\n\t\t\t\t\t\t\t<div class=\"flex items-center\">\n\t\t\t\t\t\t\t\t<span class=\"mr-2\">${mediaTypeIcon}</span>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<div class=\"text-sm font-medium text-gray-100\">${escapeHtml(item.Title)}</div>\n\t\t\t\t\t\t\t\t\t<div class=\"text-xs text-gray-500\">ID: ${item.JellyfinID}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n\t\t\t\t\t\t\t${item.Year}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"px-6 py-4 whitespace-nowrap\">\n\t\t\t\t\t\t\t<span class=\"px-2 py-1 text-xs rounded-full ${item.MediaType === 'tv' ? 'bg-purple-900 text-purple-200' : 'bg-blue-900 text-blue-200'}\">\n\t\t\t\t\t\t\t\t${item.MediaType.toUpperCase()}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n\t\t\t\t\t\t\t${escapeHtml(item.LibraryName)}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n\t\t\t\t\t\t\t${item.RequestedBy ? escapeHtml(item.RequestedBy) : '-'}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"px-6 py-4 whitespace-nowrap\">\n\t\t\t\t\t\t\t${deleteReasonBadge}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n\t\t\t\t\t\t\t${formattedDate}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n\t\t\t\t\t\t\t${fileSize}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t`;\n\t\t\t}).join('');\n\t\t}\n\n\t\tfunction updatePagination(historyData) {\n\t\t\ttotalPages = historyData.totalPages || 1;\n\t\t\tconst total = historyData.total || 0;\n\t\t\tconst from = total > 0 ? ((currentPage - 1) * pageSize) + 1 : 0;\n\t\t\tconst to = Math.min(currentPage * pageSize, total);\n\n\t\t\tdocument.getElementById('showing-from').textContent = from;\n\t\t\tdocument.getElementById('showing-to').textContent = to;\n\t\t\tdocument.getElementById('total-items').textContent = total;\n\t\t\tdocument.getElementById('current-page').textContent = currentPage;\n\t\t\tdocument.getElementById('total-pages').textContent = totalPages;\n\n\t\t\tconst prevBtn = document.getElementById('prev-page-btn');\n\t\t\tconst nextBtn = document.getElementById('next-page-btn');\n\n\t\t\tprevBtn.disabled = currentPage <= 1;\n\t\t\tnextBtn.disabled = currentPage >= totalPages;\n\t\t}\n\n\t\tfunction refreshHistory() {\n\t\t\tconst buttonId = 'refresh-history-btn';\n\t\t\tconst originalContent = window.setButtonLoading(buttonId, 'Refreshing...');\n\t\t\tif (!originalContent) return;\n\n\t\t\tloadHistory();\n\n\t\t\tsetTimeout(() => {\n\t\t\t\twindow.restoreButton(buttonId, originalContent);\n\t\t\t\twindow.showToast('History refreshed successfully', 'success');\n\t\t\t}, 500);\n\t\t}\n\n\t\tfunction formatFileSize(bytes) {\n\t\t\tif (!bytes || bytes === 0) return '0 B';\n\t\t\tconst k = 1024;\n\t\t\tconst sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\n\t\t\tconst i = Math.floor(Math.log(bytes) / Math.log(k));\n\t\t\treturn parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n\t\t}\n\n\t\tfunction getDeleteReasonBadge(reason) {\n\t\t\tconst badges = {\n\t\t\t\t'default': '<span class=\"px-2 py-1 text-xs rounded-full bg-red-900 text-red-200\">Deleted</span>',\n\t\t\t\t'streamed': '<span class=\"px-2 py-1 text-xs rounded-full bg-green-900 text-green-200\">Streamed</span>',\n\t\t\t\t'keep_forever': '<span class=\"px-2 py-1 text-xs rounded-full bg-blue-900 text-blue-200\">Keep Forever</span>',\n\t\t\t\t'protection_expired': '<span class=\"px-2 py-1 text-xs rounded-full bg-yellow-900 text-yellow-200\">Protection Expired</span>'\n\t\t\t};\n\t\t\treturn badges[reason] || badges['default'];\n\t\t}\n\n\t\tfunction escapeHtml(text) {\n\t\t\tif (!text) return '';\n\t\t\tconst div = document.createElement('div');\n\t\t\tdiv.textContent = text;\n\t\t\treturn div.innerHTML;\n\t\t}\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
