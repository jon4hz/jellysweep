package templates

import "github.com/jon4hz/jellysweep/api/models"
import "github.com/jon4hz/jellysweep/web/templates/components"

templ Layout(title string, user *models.User) {
	@LayoutWithPendingRequests(title, user, 0) {
		{ children... }
	}
}

templ LayoutWithPendingRequests(title string, user *models.User, pendingRequestsCount int) {
	<!DOCTYPE html>
	<html lang="en" class="dark">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>{ title } - Jellysweep</title>
			<!-- PWA Meta Tags -->
			<meta name="theme-color" content="#111827"/>
			<meta name="description" content="Jellysweep - Manage your Jellyfin media library"/>
			<meta name="apple-mobile-web-app-capable" content="yes"/>
			<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent"/>
			<meta name="apple-mobile-web-app-title" content="Jellysweep"/>
			<meta name="mobile-web-app-capable" content="yes"/>
			<!-- Manifest and Icons -->
			<link rel="manifest" href="/static/manifest.json"/>
			<link rel="icon" type="image/png" href="/static/jellysweep.png"/>
			<link rel="apple-touch-icon" href="/static/jellysweep.png"/>
			<!-- Stylesheets and Scripts -->
			<link rel="stylesheet" href="/static/dist/style.css"/>
			<script src="/static/dist/chart.js"></script>
		</head>
		<body class="bg-gray-950 text-gray-100 min-h-screen">
			@Navbar(user, pendingRequestsCount)
			<main class="container mx-auto px-4 py-8">
				{ children... }
			</main>
			@components.NotificationsScript()
			@components.PWAScript()
		</body>
	</html>
}

templ Navbar(user *models.User, pendingRequestsCount int) {
	<nav class="bg-gray-900 border-b border-gray-800">
		<div class="container mx-auto px-4">
			<div class="flex justify-between items-center h-16">
				<div class="flex items-center space-x-4">
					<a href="/" onclick="window.smoothNavigate && window.smoothNavigate('/'); return false;" class="flex items-center space-x-2">
						<img src="/static/jellysweep.png" alt="Jellysweep" class="w-8 h-8 rounded-lg"/>
						<span class="text-xl font-semibold text-gray-100">Jellysweep</span>
					</a>
					if user != nil && !user.IsAdmin {
						<div class="hidden md:flex space-x-6">
							<a href="/" class="text-gray-300 hover:text-white transition-colors duration-200">
								Dashboard
							</a>
						</div>
					}
					if user != nil && user.IsAdmin {
						<div class="hidden md:flex space-x-6">
							<a href="/" onclick="window.smoothNavigate && window.smoothNavigate('/'); return false;" class="text-gray-300 hover:text-white transition-colors duration-200">
								Dashboard
							</a>
							<a href="/admin" onclick="window.smoothNavigate && window.smoothNavigate('/admin'); return false;" class="relative text-gray-300 hover:text-white transition-colors duration-200">
								Admin Panel
								if pendingRequestsCount > 0 {
									<span class="absolute -top-1.5 -right-2.5 bg-red-500 rounded-full w-2.5 h-2.5 animate-pulse"></span>
								}
							</a>
						</div>
					}
				</div>
				<div class="flex items-center space-x-4">
					<!-- Mobile menu button -->
					if user != nil {
						<button id="mobile-menu-button" class="md:hidden text-gray-300 hover:text-white focus:outline-none focus:text-white">
							<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path id="menu-icon" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
								<path id="close-icon" class="hidden" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
							</svg>
						</button>
					}
					if user != nil {
						<div class="hidden md:flex items-center space-x-4">
							<div class="relative">
								<button id="profile-dropdown-button" class="flex items-center space-x-2 text-gray-300 hover:text-white transition-colors duration-200 focus:outline-none">
									<div class="w-8 h-8 bg-gray-700 rounded-full flex items-center justify-center overflow-hidden">
										if user.GravatarURL != "" {
											<img src={ user.GravatarURL } alt={ user.Name } class="w-full h-full object-cover"/>
										} else {
											<svg class="w-4 h-4 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
												<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
											</svg>
										}
									</div>
									<span class="text-sm">{ user.Name }</span>
									<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
									</svg>
								</button>
								<!-- Profile dropdown -->
								<div id="profile-dropdown" class="absolute right-0 mt-2 w-48 bg-gray-800 rounded-lg shadow-lg border border-gray-700 hidden z-50">
									<div class="py-2">
										<div class="px-4 py-2 border-b border-gray-700">
											<p class="text-gray-100 font-medium">{ user.Name }</p>
											<p class="text-gray-400 text-sm">
												if user.IsAdmin {
													Administrator
												} else {
													User
												}
											</p>
										</div>
										<button id="desktop-notifications-button" class="items-center w-full px-4 py-2 text-gray-300 hover:text-white hover:bg-gray-700 transition-colors duration-200 hidden">
											<svg class="w-4 h-4 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
												<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 8A6 6 0 006 8c0 7-3 9-3 9h18s-3-2-3-9zM13.73 21a2 2 0 01-3.46 0"></path>
											</svg>
											Notifications
										</button>
										<a href="/logout" class="flex items-center px-4 py-2 text-gray-300 hover:text-white hover:bg-gray-700 transition-colors duration-200">
											<svg class="w-4 h-4 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
												<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"></path>
											</svg>
											Sign Out
										</a>
									</div>
								</div>
							</div>
						</div>
					} else {
						<a href="/login" class="btn-primary">
							Sign In
						</a>
					}
				</div>
			</div>
		</div>
	</nav>
	<!-- Mobile side menu -->
	if user != nil {
		<div id="mobile-menu" class="fixed inset-0 z-50 hidden">
			<!-- Backdrop with blur effect -->
			<div id="mobile-menu-overlay" class="fixed inset-0 bg-gray-900/20 backdrop-blur-sm"></div>
			<!-- Side menu -->
			<div id="mobile-menu-panel" class="fixed right-0 top-0 h-full w-64 bg-gray-900 border-l border-gray-800 transform translate-x-full transition-transform duration-300 ease-in-out">
				<div class="flex flex-col h-full">
					<!-- Header -->
					<div class="flex items-center justify-between p-4 border-b border-gray-800">
						<span class="text-lg font-semibold text-gray-100">Menu</span>
						<button id="close-mobile-menu" class="text-gray-300 hover:text-white focus:outline-none">
							<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
							</svg>
						</button>
					</div>
					<!-- User info -->
					<div class="p-4 border-b border-gray-800">
						<div class="flex items-center space-x-3">
							<div class="w-8 h-8 bg-gray-700 rounded-full flex items-center justify-center overflow-hidden">
								if user.GravatarURL != "" {
									<img src={ user.GravatarURL } alt={ user.Name } class="w-full h-full object-cover"/>
								} else {
									<svg class="w-4 h-4 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
									</svg>
								}
							</div>
							<div>
								<p class="text-gray-100 font-medium">{ user.Name }</p>
								<p class="text-gray-400 text-sm">
									if user.IsAdmin {
										Administrator
									} else {
										User
									}
								</p>
							</div>
						</div>
					</div>
					<!-- Navigation links -->
					<div class="flex-1 py-4">
						<div class="space-y-2 px-4">
							<a href="/" onclick="window.smoothNavigate && window.smoothNavigate('/'); return false;" class="block px-4 py-3 text-gray-300 hover:text-white hover:bg-gray-800 rounded-lg transition-colors duration-200">
								<div class="flex items-center space-x-3">
									<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z"></path>
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 5a2 2 0 012-2h4a2 2 0 012 2v2H8V5z"></path>
									</svg>
									<span>Dashboard</span>
								</div>
							</a>
							if user.IsAdmin {
								<a href="/admin" onclick="window.smoothNavigate && window.smoothNavigate('/admin'); return false;" class="block px-4 py-3 text-gray-300 hover:text-white hover:bg-gray-800 rounded-lg transition-colors duration-200">
									<div class="flex items-center justify-between">
										<div class="flex items-center space-x-3">
											<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
												<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path>
												<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
											</svg>
											<span>Admin Panel</span>
										</div>
										if pendingRequestsCount > 0 {
											<span class="bg-red-500 text-white rounded-full px-2 py-1 text-xs font-medium">{ pendingRequestsCount }</span>
										}
									</div>
								</a>
							}
						</div>
					</div>
					<!-- Install App button -->
					<div id="mobile-install-section" class="p-4 border-t border-gray-800 hidden">
						<button id="mobile-install-button" class="flex items-center justify-center w-full px-4 py-3 text-gray-300 hover:text-white hover:bg-gray-800 rounded-lg transition-colors duration-200">
							<svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z"></path>
							</svg>
							Install App
						</button>
					</div>
					<!-- Notifications button -->
					<div id="mobile-notifications-section" class="p-4 border-t border-gray-800 hidden">
						<button id="mobile-notifications-button" class="flex items-center justify-center w-full px-4 py-3 text-gray-300 hover:text-white hover:bg-gray-800 rounded-lg transition-colors duration-200">
							<svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 8A6 6 0 006 8c0 7-3 9-3 9h18s-3-2-3-9zM13.73 21a2 2 0 01-3.46 0"></path>
							</svg>
							Notifications
						</button>
					</div>
					<!-- Logout button -->
					<div class="p-4 border-t border-gray-800">
						<a href="/logout" class="flex items-center justify-center w-full px-4 py-3 text-gray-300 hover:text-white hover:bg-gray-800 rounded-lg transition-colors duration-200">
							<svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"></path>
							</svg>
							Sign Out
						</a>
					</div>
				</div>
			</div>
		</div>
	}
	@MobileMenuScript()
}

templ MobileMenuScript() {
	<script>
		document.addEventListener('DOMContentLoaded', function() {
			const mobileMenuButton = document.getElementById('mobile-menu-button');
			const mobileMenu = document.getElementById('mobile-menu');
			const mobileMenuPanel = document.getElementById('mobile-menu-panel');
			const mobileMenuOverlay = document.getElementById('mobile-menu-overlay');
			const closeMobileMenu = document.getElementById('close-mobile-menu');
			const menuIcon = document.getElementById('menu-icon');
			const closeIcon = document.getElementById('close-icon');

			// Profile dropdown elements
			const profileDropdownButton = document.getElementById('profile-dropdown-button');
			const profileDropdown = document.getElementById('profile-dropdown');

			if (!mobileMenuButton || !mobileMenu || !mobileMenuPanel) return;

			function openMenu() {
				mobileMenu.classList.remove('hidden');
				setTimeout(() => {
					mobileMenuPanel.classList.remove('translate-x-full');
				}, 10);
				menuIcon.classList.add('hidden');
				closeIcon.classList.remove('hidden');
				document.body.style.overflow = 'hidden';
			}

			function closeMenu() {
				mobileMenuPanel.classList.add('translate-x-full');
				setTimeout(() => {
					mobileMenu.classList.add('hidden');
				}, 300);
				menuIcon.classList.remove('hidden');
				closeIcon.classList.add('hidden');
				document.body.style.overflow = '';
			}

			// Mobile menu toggle
			mobileMenuButton.addEventListener('click', function() {
				if (mobileMenu.classList.contains('hidden')) {
					openMenu();
				} else {
					closeMenu();
				}
			});

			if (closeMobileMenu) {
				closeMobileMenu.addEventListener('click', closeMenu);
			}

			if (mobileMenuOverlay) {
				mobileMenuOverlay.addEventListener('click', closeMenu);
			}

			// Desktop profile dropdown
			if (profileDropdownButton && profileDropdown) {
				profileDropdownButton.addEventListener('click', function(e) {
					e.stopPropagation();
					profileDropdown.classList.toggle('hidden');
				});

				// Close dropdown when clicking outside
				document.addEventListener('click', function(e) {
					if (!profileDropdownButton.contains(e.target) && !profileDropdown.contains(e.target)) {
						profileDropdown.classList.add('hidden');
					}
				});
			}

			// Close menu when clicking on navigation links
			const mobileMenuLinks = document.querySelectorAll('#mobile-menu a[href]');
			mobileMenuLinks.forEach(link => {
				link.addEventListener('click', function(e) {
					// If this is a smooth navigation link, handle it specially
					if (link.onclick) {
						e.preventDefault();
						closeMenu();
						// Wait for menu close animation to complete before navigating
						setTimeout(() => {
							link.onclick.call(link, e);
						}, 300);
					} else {
						// For regular links, close menu with a small delay
						setTimeout(closeMenu, 100);
					}
				});
			});

			// Close menu on escape key
			document.addEventListener('keydown', function(event) {
				if (event.key === 'Escape') {
					if (!mobileMenu.classList.contains('hidden')) {
						closeMenu();
					}
					if (profileDropdown && !profileDropdown.classList.contains('hidden')) {
						profileDropdown.classList.add('hidden');
					}
				}
			});
		});
	</script>
}
